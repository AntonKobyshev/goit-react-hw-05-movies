{"version":3,"file":"static/js/891.2371eb27.chunk.js","mappings":"mTAEMA,EAAe,IAAIC,gBAAgB,CACvCC,QAAS,mCACTC,SAAU,QACVC,eAAe,IAGjBC,EAAAA,EAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAiB,mCAAG,sGACRD,EAAAA,EAAAA,IAAA,6BAAgCL,IADxB,uBACvBO,EADuB,EACvBA,KADuB,kBAExBA,EAAKC,SAFmB,2CAAH,qDAKjBC,EAAc,mCAAG,WAAMC,GAAN,yFACLL,EAAAA,EAAAA,IAAA,wBACJL,EADI,kBACkBU,IAFb,uBACpBH,EADoB,EACpBA,KADoB,kBAIrBA,EAAKC,SAJgB,2CAAH,sDAOdG,EAAe,mCAAG,WAAMC,GAAN,yFACNP,EAAAA,EAAAA,IAAA,iBAAoBO,EAApB,YAA0BZ,IADpB,uBACrBO,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,sDAKfM,EAAY,mCAAG,WAAMD,GAAN,yFACHP,EAAAA,EAAAA,IAAA,iBAAoBO,EAApB,oBAAkCZ,IAD/B,uBAClBO,EADkB,EAClBA,KADkB,kBAEnBA,EAAKO,MAFc,2CAAH,sDAKZC,EAAe,mCAAG,WAAMH,GAAN,yFACNP,EAAAA,EAAAA,IAAA,iBAAoBO,EAApB,oBAAkCZ,IAD5B,uBACrBO,EADqB,EACrBA,KADqB,kBAEtBA,EAAKC,SAFiB,2CAAH,qD,mFCd5B,UAda,WACX,OAA4BQ,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAMA,OAJAC,EAAAA,EAAAA,YAAU,YACRb,EAAAA,EAAAA,MAAoBc,KAAKF,EAC1B,GAAE,KAGD,+BACE,SAAC,IAAD,CAAYD,OAAQA,KAGzB,C,gLCbYI,EAAYC,EAAAA,EAAAA,GAAH,uIAQTC,EAAYD,EAAAA,EAAAA,GAAH,yUAeTE,GAAYF,EAAAA,EAAAA,GAAOG,EAAAA,GAAPH,CAAH,kMAYTI,EAAWJ,EAAAA,EAAAA,IAAH,kHAORK,EAAYL,EAAAA,EAAAA,EAAH,8I,SClCTM,EAAa,SAAC,GAAgB,IAAdX,EAAa,EAAbA,OACrBY,GAAWC,EAAAA,EAAAA,MAGjB,OACE,SAACT,EAAD,UACGJ,EAAOc,KAAI,gBAAGnB,EAAH,EAAGA,GAAIoB,EAAP,EAAOA,MAAOC,EAAd,EAAcA,YAAd,OACV,SAACV,EAAD,WACE,UAACC,EAAD,CAAWU,GAAE,kBAAatB,GAAMuB,MAAO,CAAEC,KAAMP,GAA/C,WACE,SAACH,EAAD,CACEW,IACEJ,EATK,mCASoBK,OAAOL,GAAeM,EAEjDC,IAAKR,KAEP,SAACL,EAAD,UAAYK,QARApB,EADN,KAejB,C","sources":["API/fetchMovies.js","Pages/Home/Home.jsx","components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst searchParams = new URLSearchParams({\n  api_key: 'b0cde6bcd1647f8df32fb28311129fbd',\n  language: 'en-US',\n  include_adult: false,\n});\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(`/trending/all/week?${searchParams}`);\n  return data.results;\n};\n\nexport const getMovieByName = async name => {\n  const { data } = await axios.get(\n    `/search/movie?${searchParams}&query=${name}`\n  );\n  return data.results;\n};\n\nexport const getMovieDetails = async id => {\n  const { data } = await axios.get(`/movie/${id}?${searchParams}`);\n  return data;\n};\n\nexport const getMovieCast = async id => {\n  const { data } = await axios.get(`/movie/${id}/credits?${searchParams}`);\n  return data.cast;\n};\n\nexport const getMovieReviews = async id => {\n  const { data } = await axios.get(`/movie/${id}/reviews?${searchParams}`);\n  return data.results;\n};\n","import { getTrendingMovies } from 'API/fetchMovies';\nimport { useEffect, useState } from 'react';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    getTrendingMovies().then(setMovies);\n  }, []);\n\n  return (\n    <>\n      <MoviesList movies={movies} />\n    </>\n  );\n};\n\nexport default Home;\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const MovieList = styled.ul`\n  margin-bottom: 40px;\n  display: flex;\n  justify-content: space-between;\n  flex-wrap: wrap;\n  gap: 20px;\n`;\n\nexport const MovieItem = styled.li`\n  flex-basis: calc((100% - 100px) / 5);\n  max-height: 100%;\n  min-height: 390px;\n  border-radius: 8px;\n  overflow: hidden;\n  background-color: var(--bg);\n  box-shadow: var(--main-shadow);\n  transition: transform 0.3s ease;\n  &:hover {\n    color: var(--accent);\n    transform: scale(1.05);\n  }\n`;\n\nexport const MovieLink = styled(Link)`\n  object-fit: cover;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  height: 100%;\n\n  &:hover img {\n    filter: grayscale(0);\n  }\n`;\n\nexport const MovieImg = styled.img`\n  margin-bottom: 5px;\n  filter: grayscale(0.4);\n\n  transition: all 200ms ease-in-out;\n`;\n\nexport const MovieName = styled.p`\n  height: 100%;\n  padding: 10px 8px;\n  font-weight: 500;\n  font-size: 18px;\n  transition: all 200ms ease-in-out;\n`;\n","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport defaultMovieImg from 'images/movie-poster-default.webp';\nimport {\n  MovieList,\n  MovieItem,\n  MovieLink,\n  MovieImg,\n  MovieName,\n} from './MoviesList.styled';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n  const imgBaseUrl = 'https://image.tmdb.org/t/p/w500/';\n\n  return (\n    <MovieList>\n      {movies.map(({ id, title, poster_path }) => (\n        <MovieItem key={id}>\n          <MovieLink to={`/movies/${id}`} state={{ from: location }}>\n            <MovieImg\n              src={\n                poster_path ? imgBaseUrl.concat(poster_path) : defaultMovieImg\n              }\n              alt={title}\n            />\n            <MovieName>{title}</MovieName>\n          </MovieLink>\n        </MovieItem>\n      ))}\n    </MovieList>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string,\n      poster_path: PropTypes.string,\n    })\n  ).isRequired,\n};\n"],"names":["searchParams","URLSearchParams","api_key","language","include_adult","axios","getTrendingMovies","data","results","getMovieByName","name","getMovieDetails","id","getMovieCast","cast","getMovieReviews","useState","movies","setMovies","useEffect","then","MovieList","styled","MovieItem","MovieLink","Link","MovieImg","MovieName","MoviesList","location","useLocation","map","title","poster_path","to","state","from","src","concat","defaultMovieImg","alt"],"sourceRoot":""}