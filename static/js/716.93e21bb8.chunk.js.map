{"version":3,"file":"static/js/716.93e21bb8.chunk.js","mappings":"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","sources":["API/fetchMovies.js","components/MovieCard/MovieCard.styled.jsx","components/MovieCard/MovieCard.jsx","Pages/MovieDetails/MovieDetails.styled.jsx","Pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst searchParams = new URLSearchParams({\n  api_key: 'b0cde6bcd1647f8df32fb28311129fbd',\n  language: 'en-US',\n  include_adult: false,\n});\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(`/trending/all/week?${searchParams}`);\n  return data.results;\n};\n\nexport const getMovieByName = async name => {\n  const { data } = await axios.get(\n    `/search/movie?${searchParams}&query=${name}`\n  );\n  return data.results;\n};\n\nexport const getMovieDetails = async id => {\n  const { data } = await axios.get(`/movie/${id}?${searchParams}`);\n  return data;\n};\n\nexport const getMovieCast = async id => {\n  const { data } = await axios.get(`/movie/${id}/credits?${searchParams}`);\n  return data.cast;\n};\n\nexport const getMovieReviews = async id => {\n  const { data } = await axios.get(`/movie/${id}/reviews?${searchParams}`);\n  return data.results;\n};\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  display: flex;\n  gap: 32px;\n`;\n\nexport const Img = styled.img`\n  border-radius: 4px;\n  box-shadow: var(--main-shadow);\n`;\n\nexport const Wrapper = styled.div``;\n\nexport const Title = styled.h2`\n  margin-bottom: 42px;\n  font-weight: 700;\n  font-size: 36px;\n  color: var(--accent);\n`;\n\nexport const Year = styled.span`\n  font-weight: 200;\n  color: var(--secondary);\n`;\n\nexport const Description = styled.p`\n  margin-bottom: 15px;\n  font-size: 20px;\n  font-weight: 500;\n  color: var(--accent);\n`;\n\nexport const Text = styled.span`\n  font-weight: 300;\n  letter-spacing: 0.05em;\n  color: var(--secondary);\n`;\n","import {\n  Container,\n  Img,\n  Title,\n  Wrapper,\n  Year,\n  Description,\n  Text,\n} from './MovieCard.styled';\nimport defaultMovieImg from 'images/movie-poster-default.webp';\n\nexport const MovieCard = ({ movie }) => {\n  const { poster_path, title, release_date, vote_average, overview, genres } =\n    movie;\n\n  const imgBaseUrl = 'https://image.tmdb.org/t/p/w500/';\n  const imgUrl = imgBaseUrl.concat(poster_path);\n  const releaseDate = release_date.slice(0, 4);\n  const voteScore = vote_average.toFixed(1);\n  const genresList = genres.map(ganre => ganre.name).join(', ');\n\n  return (\n    <Container>\n      <Img src={imgUrl ?? defaultMovieImg} alt=\"{title}\" width=\"350\" />\n      <Wrapper>\n        <Title>\n          {title} <Year>({releaseDate})</Year>\n        </Title>\n        <Description>\n          User score: <Text>{voteScore}</Text>\n        </Description>\n        <Description>\n          Overview: <Text>{overview}</Text>\n        </Description>\n        <Description>\n          Genres: <Text>{genresList}</Text>\n        </Description>\n      </Wrapper>\n    </Container>\n  );\n};\n","import styled from '@emotion/styled';\nimport { Link, NavLink } from 'react-router-dom';\n\nexport const BackLink = styled(Link)`\n  display: inline-block;\n  margin-bottom: 20px;\n  padding: 8px 14px;\n\n  font-weight: 500;\n  font-size: 18px;\n\n  border-radius: 4px;\n\n  border: none;\n  color: var(--accent);\n  background-color: var(--bg);\n  box-shadow: var(--main-shadow);\n\n  transition: all 200ms ease-in-out;\n  cursor: pointer;\n\n  :hover,\n  :focus-visible {\n    color: var(--bg);\n    background-color: var(--accent);\n  }\n\n  :focus {\n    outline: none;\n    box-shadow: none;\n  }\n`;\n\nexport const Container = styled.div`\n  margin: 20px 0;\n  display: flex;\n  gap: 12px;\n`;\n\nexport const AddInfo = styled(NavLink)`\n  display: inline-block;\n  padding: 8px 14px;\n\n  font-weight: 500;\n  font-size: 18px;\n\n  border-radius: 4px;\n\n  border: none;\n  color: var(--accent);\n  background-color: var(--bg);\n  box-shadow: var(--main-shadow);\n\n  transition: all 200ms ease-in-out;\n  cursor: pointer;\n\n  &.active {\n    color: var(--bg);\n    background-color: var(--accent);\n    box-shadow: var(--main-shadow);\n  }\n\n  :hover,\n  :focus-visible {\n    color: var(--bg);\n    background-color: var(--accent);\n  }\n\n  :focus {\n    outline: none;\n    box-shadow: transperent;\n  }\n`;","import { useState, useEffect, Suspense } from 'react';\nimport { useParams, Outlet, useLocation } from 'react-router-dom';\nimport { getMovieDetails } from 'API/fetchMovies';\nimport { MovieCard } from 'components/MovieCard/MovieCard';\nimport { BackLink, AddInfo, Container } from './MovieDetails.styled';\nimport { Loader } from 'components/Loader/Loader';\n\nconst MovieDetails = () => {\n  const [movieDetails, setMovieDetails] = useState(null);\n  const { movieId } = useParams();\n  const location = useLocation();\n\n  useEffect(() => {\n    getMovieDetails(movieId).then(setMovieDetails);\n  }, [movieId]);\n\n  if (!movieDetails) {\n    return null;\n  }\n\n  const backLink = location.state?.from ?? '/';\n\n  return (\n    <>\n      <BackLink to={backLink}>Go back</BackLink>\n      <MovieCard movie={movieDetails} />\n      <Container>\n        <AddInfo to={'cast'} state={{ from: backLink }}>\n          Cast\n        </AddInfo>\n        <AddInfo to={'reviews'} state={{ from: backLink }}>\n          Reviews\n        </AddInfo>\n      </Container>\n\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["searchParams","URLSearchParams","api_key","language","include_adult","axios","getTrendingMovies","data","results","getMovieByName","name","getMovieDetails","id","getMovieCast","cast","getMovieReviews","Container","styled","Img","Wrapper","Title","Year","Description","Text","MovieCard","movie","poster_path","title","release_date","vote_average","overview","genres","imgUrl","concat","releaseDate","slice","voteScore","toFixed","genresList","map","ganre","join","src","defaultMovieImg","alt","width","BackLink","Link","AddInfo","NavLink","useState","movieDetails","setMovieDetails","movieId","useParams","location","useLocation","useEffect","then","backLink","state","from","to","Suspense","fallback","Loader"],"sourceRoot":""}