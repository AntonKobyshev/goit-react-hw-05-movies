{"version":3,"file":"static/js/332.8bd4b867.chunk.js","mappings":"mTAEMA,EAAe,IAAIC,gBAAgB,CACvCC,QAAS,mCACTC,SAAU,QACVC,eAAe,IAGjBC,EAAAA,EAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAiB,mCAAG,sGACRD,EAAAA,EAAAA,IAAA,6BAAgCL,IADxB,uBACvBO,EADuB,EACvBA,KADuB,kBAExBA,EAAKC,SAFmB,2CAAH,qDAKjBC,EAAc,mCAAG,WAAMC,GAAN,yFACLL,EAAAA,EAAAA,IAAA,wBACJL,EADI,kBACkBU,IAFb,uBACpBH,EADoB,EACpBA,KADoB,kBAIrBA,EAAKC,SAJgB,2CAAH,sDAOdG,EAAe,mCAAG,WAAMC,GAAN,yFACNP,EAAAA,EAAAA,IAAA,iBAAoBO,EAApB,YAA0BZ,IADpB,uBACrBO,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,sDAKfM,EAAY,mCAAG,WAAMD,GAAN,yFACHP,EAAAA,EAAAA,IAAA,iBAAoBO,EAApB,oBAAkCZ,IAD/B,uBAClBO,EADkB,EAClBA,KADkB,kBAEnBA,EAAKO,MAFc,2CAAH,sDAKZC,EAAe,mCAAG,WAAMH,GAAN,yFACNP,EAAAA,EAAAA,IAAA,iBAAoBO,EAApB,oBAAkCZ,IAD5B,uBACrBO,EADqB,EACrBA,KADqB,kBAEtBA,EAAKC,SAFiB,2CAAH,qD,iIChCfQ,EAAY,WACvB,OAAO,uBAAG,mDACX,E,mBCAYC,EAAOC,EAAAA,EAAAA,GAAH,mFAQJC,GAFOD,EAAAA,EAAAA,GAAH,sBAEKA,EAAAA,EAAAA,EAAH,6FAMNE,EAAOF,EAAAA,EAAAA,EAAH,8FCkBjB,EA5BgB,WACd,OAA8BG,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAQR,IANAE,EAAAA,EAAAA,YAAU,YACRX,EAAAA,EAAAA,IAAgBS,GAASG,KAAKJ,EAC/B,GAAE,CAACC,IAEJI,QAAQC,IAAIP,GAEPA,EAIL,OACE,UAACL,EAAD,WACsB,IAAnBK,EAAQQ,SAAgB,SAACd,EAAD,IAExBM,EAAQS,KAAI,gBAAGnB,EAAH,EAAGA,GAAIoB,EAAP,EAAOA,QAASC,EAAhB,EAAgBA,OAAhB,OACX,2BACE,SAACd,EAAD,UAASc,KACT,SAACb,EAAD,UAAOY,MAFApB,EADE,MAQlB,C","sources":["API/fetchMovies.js","Errors/NoReviews.jsx","components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst searchParams = new URLSearchParams({\n  api_key: 'b0cde6bcd1647f8df32fb28311129fbd',\n  language: 'en-US',\n  include_adult: false,\n});\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(`/trending/all/week?${searchParams}`);\n  return data.results;\n};\n\nexport const getMovieByName = async name => {\n  const { data } = await axios.get(\n    `/search/movie?${searchParams}&query=${name}`\n  );\n  return data.results;\n};\n\nexport const getMovieDetails = async id => {\n  const { data } = await axios.get(`/movie/${id}?${searchParams}`);\n  return data;\n};\n\nexport const getMovieCast = async id => {\n  const { data } = await axios.get(`/movie/${id}/credits?${searchParams}`);\n  return data.cast;\n};\n\nexport const getMovieReviews = async id => {\n  const { data } = await axios.get(`/movie/${id}/reviews?${searchParams}`);\n  return data.results;\n};\n","export const NoReviews = () => {\n  return <p>Sorry, we don't have any reviews on this movie.</p>;\n};","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 30px;\n`;\n\nexport const Item = styled.li``;\n\nexport const Author = styled.p`\n  margin-bottom: 8px;\n  font-size: 20px;\n  color: var(--accent);\n`;\n\nexport const Text = styled.p`\n  font-size: 16px;\n  color: var(--secondary);\n  line-height: 1.68;\n`;","import { getMovieReviews } from 'API/fetchMovies';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { NoReviews } from 'Errors/NoReviews';\nimport { List, Author, Text } from './Reviews.styled';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getMovieReviews(movieId).then(setReviews);\n  }, [movieId]);\n\n  console.log(reviews);\n\n  if (!reviews) {\n    return;\n  }\n\n  return (\n    <List>\n      {reviews.length === 0 && <NoReviews />}\n\n      {reviews.map(({ id, content, author }) => (\n        <li key={id}>\n          <Author>{author}</Author>\n          <Text>{content}</Text>\n        </li>\n      ))}\n    </List>\n  );\n};\n\nexport default Reviews;\n"],"names":["searchParams","URLSearchParams","api_key","language","include_adult","axios","getTrendingMovies","data","results","getMovieByName","name","getMovieDetails","id","getMovieCast","cast","getMovieReviews","NoReviews","List","styled","Author","Text","useState","reviews","setReviews","movieId","useParams","useEffect","then","console","log","length","map","content","author"],"sourceRoot":""}