{"version":3,"file":"static/js/695.c1cb4f74.chunk.js","mappings":"mTAEMA,EAAe,IAAIC,gBAAgB,CACvCC,QAAS,mCACTC,SAAU,QACVC,eAAe,IAGjBC,EAAAA,EAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAiB,mCAAG,sGACRD,EAAAA,EAAAA,IAAA,6BAAgCL,IADxB,uBACvBO,EADuB,EACvBA,KADuB,kBAExBA,EAAKC,SAFmB,2CAAH,qDAKjBC,EAAc,mCAAG,WAAMC,GAAN,yFACLL,EAAAA,EAAAA,IAAA,wBACJL,EADI,kBACkBU,IAFb,uBACpBH,EADoB,EACpBA,KADoB,kBAIrBA,EAAKC,SAJgB,2CAAH,sDAOdG,EAAe,mCAAG,WAAMC,GAAN,yFACNP,EAAAA,EAAAA,IAAA,iBAAoBO,EAApB,YAA0BZ,IADpB,uBACrBO,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,sDAKfM,EAAY,mCAAG,WAAMD,GAAN,yFACHP,EAAAA,EAAAA,IAAA,iBAAoBO,EAApB,oBAAkCZ,IAD/B,uBAClBO,EADkB,EAClBA,KADkB,kBAEnBA,EAAKO,MAFc,2CAAH,sDAKZC,EAAe,mCAAG,WAAMH,GAAN,yFACNP,EAAAA,EAAAA,IAAA,iBAAoBO,EAApB,oBAAkCZ,IAD5B,uBACrBO,EADqB,EACrBA,KADqB,kBAEtBA,EAAKC,SAFiB,2CAAH,qD,mIChCfQ,EAAS,WACpB,OAAO,uBAAG,+CACX,E,mBCAYC,EAAOC,EAAAA,EAAAA,GAAH,oIAQJC,EAAOD,EAAAA,EAAAA,GAAH,8CAIJE,EAAMF,EAAAA,EAAAA,IAAH,sEAKHG,EAAOH,EAAAA,EAAAA,EAAH,oEAKJI,EAAYJ,EAAAA,EAAAA,EAAH,iD,kECatB,EA9Ba,WACX,OAAwBK,EAAAA,EAAAA,UAAS,MAAjC,eAAOT,EAAP,KAAaU,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAOR,IAJAE,EAAAA,EAAAA,YAAU,YACRd,EAAAA,EAAAA,IAAaY,GAASG,KAAKJ,EAC5B,GAAE,CAACC,IAECX,EAIL,OACE,UAACG,EAAD,WACmB,IAAhBH,EAAKe,SAAgB,SAACb,EAAD,IAErBF,EAAKgB,KAAI,gBAAGlB,EAAH,EAAGA,GAAImB,EAAP,EAAOA,aAAcrB,EAArB,EAAqBA,KAAMsB,EAA3B,EAA2BA,UAA3B,OACR,UAACb,EAAD,YACE,SAACC,EAAD,CAAKa,IAAKF,EAhBC,mCAgByBG,OAAOH,GAAgBI,EAAgBC,IAAK1B,KAChF,4BACE,SAACW,EAAD,UAAOX,KACP,SAACY,EAAD,UAAYU,SAJLpB,EADH,MAWf,C","sources":["API/fetchMovies.js","Errors/NoCast.jsx","components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst searchParams = new URLSearchParams({\n  api_key: 'b0cde6bcd1647f8df32fb28311129fbd',\n  language: 'en-US',\n  include_adult: false,\n});\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(`/trending/all/week?${searchParams}`);\n  return data.results;\n};\n\nexport const getMovieByName = async name => {\n  const { data } = await axios.get(\n    `/search/movie?${searchParams}&query=${name}`\n  );\n  return data.results;\n};\n\nexport const getMovieDetails = async id => {\n  const { data } = await axios.get(`/movie/${id}?${searchParams}`);\n  return data;\n};\n\nexport const getMovieCast = async id => {\n  const { data } = await axios.get(`/movie/${id}/credits?${searchParams}`);\n  return data.cast;\n};\n\nexport const getMovieReviews = async id => {\n  const { data } = await axios.get(`/movie/${id}/reviews?${searchParams}`);\n  return data.results;\n};\n","export const NoCast = () => {\n  return <p>Sorry, we don't have any cast on this movie</p>;\n};","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  margin-top: 32px;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 16px;\n  justify-content: space-between;\n`;\n\nexport const Item = styled.li`\n  flex-basis: 150px;\n`;\n\nexport const Img = styled.img`\n  margin-bottom: 8px;\n  border-radius: 4px;\n`;\n\nexport const Name = styled.p`\n  margin-bottom: 8px;\n  font-weight: 500;\n`;\n\nexport const Character = styled.p`\n  color: var(--accent);\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCast } from 'API/fetchMovies';\nimport { NoCast } from 'Errors/NoCast';\nimport { List, Item, Img, Name, Character } from './Cast.styled';\nimport defaultCastImg from 'images/cast-poster-default.png';\n\nconst Cast = () => {\n  const [cast, setCast] = useState(null);\n  const { movieId } = useParams();\n  const imgBaseUrl = 'https://image.tmdb.org/t/p/w500/';\n\n  useEffect(() => {\n    getMovieCast(movieId).then(setCast);\n  }, [movieId]);\n\n  if (!cast) {\n    return;\n  }\n\n  return (\n    <List>\n      {cast.length === 0 && <NoCast />}\n\n      {cast.map(({ id, profile_path, name, character }) => (\n        <Item key={id}>\n          <Img src={profile_path ? imgBaseUrl.concat(profile_path) : defaultCastImg} alt={name} />\n          <div>\n            <Name>{name}</Name>\n            <Character>{character}</Character>\n          </div>\n        </Item>\n      ))}\n    </List>\n  );\n};\n\nexport default Cast;"],"names":["searchParams","URLSearchParams","api_key","language","include_adult","axios","getTrendingMovies","data","results","getMovieByName","name","getMovieDetails","id","getMovieCast","cast","getMovieReviews","NoCast","List","styled","Item","Img","Name","Character","useState","setCast","movieId","useParams","useEffect","then","length","map","profile_path","character","src","concat","defaultCastImg","alt"],"sourceRoot":""}